{"version":3,"sources":["helpers.js","components/StorePicker.jsx","components/Header.jsx","components/Order.jsx","components/AddFishForm.jsx","components/EditFishForm.jsx","components/Login.jsx","base.js","components/Inventory.jsx","sample-fishes.js","components/Fish.jsx","components/App.jsx","components/NotFound.jsx","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderKeys","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","EditFishForm","handleChange","console","log","currentTarget","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$fishData","fishData","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.4333c28e.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n  myInput = React.createRef();\n  goToStore = event => {\n    // 1. Stop the form from submiting\n    event.preventDefault();\n    // 2. Get the text form the iput\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"top\">\n        <h1>\n          Catch\n          <span className=\"ofThe\">\n            <span className=\"of\">Of</span>\n            <span className=\"the\">The</span>\n          </span>\n          Day\n        </h1>\n        <h3 className=\"tagline\">\n          <span>{this.props.tagline}</span>\n        </h3>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n}\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  }\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // make sure fish is loaded before we continue\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n            <CSSTransition {...transitionOptions}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              Remove\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderKeys = Object.keys(this.props.order);\n    const total = orderKeys.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderKeys.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = event => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    // event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  }\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update fish\n    // 1. make a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button\n      className=\"github\"\n      onClick={() => props.authenticate(\"Github\")}\n    >\n      Log In With Github\n    </button>\n    <button\n      className=\"twitter\"\n      onClick={() => props.authenticate(\"Twitter\")}\n    >\n      Log In With Twitter\n    </button>\n    <button\n      className=\"facebook\"\n      onClick={() => props.authenticate(\"Facebook\")}\n    >\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired}\n\nexport default Login;\n","import Rebase from 're-base'\nimport firebase from 'firebase'\n\nvar config = {\n  apiKey: \"AIzaSyDrHZpAAcA4FaGSaDlX_uR3A4mOAFFCWLg\",\n  authDomain: \"catchoftheday-react-course-wb.firebaseapp.com\",\n  databaseURL: \"https://catchoftheday-react-course-wb.firebaseio.com\",\n};\n\nconst firebaseApp = firebase.initializeApp(config);\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport { firebaseApp };\n\n// default export\nexport default base;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\n\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMopunt() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  authHandler = async authData => {\n    // 1. Look up the current store in firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging Out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // Check if loged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They are the owner, render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory!!!</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    fishData: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.fishData;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  }\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. make a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. update state\n    fishes[key] = updatedFish;\n    // 3. set state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. make a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. update state\n    fishes[key] = null;\n    // 3. set state\n    this.setState({ fishes });\n  };\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. make a copy of state\n    const order = { ...this.state.order };\n    // 2. eithere add or update number in order\n    order[key] = order[key] + 1 || 1;\n    // 3. call setState to update state obbject\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. make a copy of state\n    const order = { ...this.state.order };\n    // 2. remove item form order\n    delete order[key];\n    // 3. call setState to update state obbject\n    this.setState({ order });\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                fishData={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not FOund!?!!!!111</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router'\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}